//执行的命令：javap -v DeadLockTest.class > DeadLockTest.txt
Classfile /D:/work/work/study/shangxuetang/out/production/duoxiancheng/tencent/jvm/DeadLockTest.class
  Last modified 2020-5-25; size 2111 bytes
  MD5 checksum ceec4741940ea6fd254b92f100515c7d
  Compiled from "DeadLockTest.java"
public class tencent.jvm.DeadLockTest
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:                        //静态常量池
    #1 = Methodref          #20.#47       // java/lang/Object."<init>":()V
    #2 = Class              #48           // java/lang/Thread
    #3 = InvokeDynamic      #0:#53        // #0:run:()Ljava/lang/Runnable;
    #4 = Methodref          #2.#54        // java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
    #5 = Methodref          #2.#55        // java/lang/Thread.start:()V
    #6 = InvokeDynamic      #1:#53        // #1:run:()Ljava/lang/Runnable;
    #7 = Fieldref           #21.#57       // tencent/jvm/DeadLockTest.lock2:Ljava/lang/Object;
    #8 = Fieldref           #58.#59       // java/lang/System.out:Ljava/io/PrintStream;
    #9 = String             #60           // thread2 ��ʼ
   #10 = Methodref          #61.#62       // java/io/PrintStream.println:(Ljava/lang/String;)V
   #11 = Long               5000l
   #13 = Methodref          #2.#63        // java/lang/Thread.sleep:(J)V
   #14 = Class              #64           // java/lang/InterruptedException
   #15 = Methodref          #14.#65       // java/lang/InterruptedException.printStackTrace:()V
   #16 = Fieldref           #21.#66       // tencent/jvm/DeadLockTest.lock1:Ljava/lang/Object;
   #17 = String             #67           // thread2 ֹͣ
   #18 = String             #68           // thread1 ��ʼ
   #19 = String             #69           // thread1 ֹͣ
   #20 = Class              #70           // java/lang/Object
   #21 = Class              #71           // tencent/jvm/DeadLockTest
   #22 = Utf8               lock1
   #23 = Utf8               Ljava/lang/Object;
   #24 = Utf8               lock2
   #25 = Utf8               <init>
   #26 = Utf8               ()V
   #27 = Utf8               Code
   #28 = Utf8               LineNumberTable
   #29 = Utf8               LocalVariableTable
   #30 = Utf8               this
   #31 = Utf8               Ltencent/jvm/DeadLockTest;
   #32 = Utf8               main
   #33 = Utf8               ([Ljava/lang/String;)V
   #34 = Utf8               args
   #35 = Utf8               [Ljava/lang/String;
   #36 = Utf8               lambda$main$1
   #37 = Utf8               e
   #38 = Utf8               Ljava/lang/InterruptedException;
   #39 = Utf8               StackMapTable
   #40 = Class              #70           // java/lang/Object
   #41 = Class              #64           // java/lang/InterruptedException
   #42 = Class              #72           // java/lang/Throwable
   #43 = Utf8               lambda$main$0
   #44 = Utf8               <clinit>
   #45 = Utf8               SourceFile
   #46 = Utf8               DeadLockTest.java
   #47 = NameAndType        #25:#26       // "<init>":()V
   #48 = Utf8               java/lang/Thread
   #49 = Utf8               BootstrapMethods
   #50 = MethodHandle       #6:#73        // invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #51 = MethodType         #26           //  ()V
   #52 = MethodHandle       #6:#74        // invokestatic tencent/jvm/DeadLockTest.lambda$main$0:()V
   #53 = NameAndType        #75:#76       // run:()Ljava/lang/Runnable;
   #54 = NameAndType        #25:#77       // "<init>":(Ljava/lang/Runnable;)V
   #55 = NameAndType        #78:#26       // start:()V
   #56 = MethodHandle       #6:#79        // invokestatic tencent/jvm/DeadLockTest.lambda$main$1:()V
   #57 = NameAndType        #24:#23       // lock2:Ljava/lang/Object;
   #58 = Class              #80           // java/lang/System
   #59 = NameAndType        #81:#82       // out:Ljava/io/PrintStream;
   #60 = Utf8               thread2 ��ʼ
   #61 = Class              #83           // java/io/PrintStream
   #62 = NameAndType        #84:#85       // println:(Ljava/lang/String;)V
   #63 = NameAndType        #86:#87       // sleep:(J)V
   #64 = Utf8               java/lang/InterruptedException
   #65 = NameAndType        #88:#26       // printStackTrace:()V
   #66 = NameAndType        #22:#23       // lock1:Ljava/lang/Object;
   #67 = Utf8               thread2 ֹͣ
   #68 = Utf8               thread1 ��ʼ
   #69 = Utf8               thread1 ֹͣ
   #70 = Utf8               java/lang/Object
   #71 = Utf8               tencent/jvm/DeadLockTest
   #72 = Utf8               java/lang/Throwable
   #73 = Methodref          #89.#90       // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #74 = Methodref          #21.#91       // tencent/jvm/DeadLockTest.lambda$main$0:()V
   #75 = Utf8               run
   #76 = Utf8               ()Ljava/lang/Runnable;
   #77 = Utf8               (Ljava/lang/Runnable;)V
   #78 = Utf8               start
   #79 = Methodref          #21.#92       // tencent/jvm/DeadLockTest.lambda$main$1:()V
   #80 = Utf8               java/lang/System
   #81 = Utf8               out
   #82 = Utf8               Ljava/io/PrintStream;
   #83 = Utf8               java/io/PrintStream
   #84 = Utf8               println
   #85 = Utf8               (Ljava/lang/String;)V
   #86 = Utf8               sleep
   #87 = Utf8               (J)V
   #88 = Utf8               printStackTrace
   #89 = Class              #93           // java/lang/invoke/LambdaMetafactory
   #90 = NameAndType        #94:#98       // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #91 = NameAndType        #43:#26       // lambda$main$0:()V
   #92 = NameAndType        #36:#26       // lambda$main$1:()V
   #93 = Utf8               java/lang/invoke/LambdaMetafactory
   #94 = Utf8               metafactory
   #95 = Class              #100          // java/lang/invoke/MethodHandles$Lookup
   #96 = Utf8               Lookup
   #97 = Utf8               InnerClasses
   #98 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #99 = Class              #101          // java/lang/invoke/MethodHandles
  #100 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #101 = Utf8               java/lang/invoke/MethodHandles
{
  public tencent.jvm.DeadLockTest();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 8: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Ltencent/jvm/DeadLockTest;

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #2                  // class java/lang/Thread
         3: dup
         4: invokedynamic #3,  0              // InvokeDynamic #0:run:()Ljava/lang/Runnable;
         9: invokespecial #4                  // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
        12: invokevirtual #5                  // Method java/lang/Thread.start:()V
        15: new           #2                  // class java/lang/Thread
        18: dup
        19: invokedynamic #6,  0              // InvokeDynamic #1:run:()Ljava/lang/Runnable;
        24: invokespecial #4                  // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
        27: invokevirtual #5                  // Method java/lang/Thread.start:()V
        30: return
      LineNumberTable:
        line 14: 0
        line 26: 12
        line 28: 15
        line 40: 27
        line 41: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  args   [Ljava/lang/String;

  static {};
    descriptor: ()V
    flags: ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #20                 // class java/lang/Object
         3: dup
         4: invokespecial #1                  // Method java/lang/Object."<init>":()V
         7: putstatic     #16                 // Field lock1:Ljava/lang/Object;
        10: new           #20                 // class java/lang/Object
        13: dup
        14: invokespecial #1                  // Method java/lang/Object."<init>":()V
        17: putstatic     #7                  // Field lock2:Ljava/lang/Object;
        20: return
      LineNumberTable:
        line 10: 0
        line 11: 10
}
SourceFile: "DeadLockTest.java"
InnerClasses:
     public static final #96= #95 of #99; //Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
BootstrapMethods:
  0: #50 invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #51 ()V
      #52 invokestatic tencent/jvm/DeadLockTest.lambda$main$0:()V
      #51 ()V
  1: #50 invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #51 ()V
      #56 invokestatic tencent/jvm/DeadLockTest.lambda$main$1:()V
      #51 ()V
